{"version":3,"sources":["data.js","Components/Card/Card.js","Components/Behavior/Behavior.js","Components/Timer/Timer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","eventos","id","driver","Card","eventTitle","eventDesc","className","icons","getIcon","stateIcon","Behavior","behaTitle","src","alt","Timer","props","state","minutes","seconds","this","myInterval","setInterval","start","setState","restart","handleReset","clearInterval","console","log","Component","App","random","random2","comportamientos","comp","play","hide","Object","values","Math","floor","length","randCol","handleEvent","randCol2","randComp","onClick","handelRandom","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.924098fd.chunk.js","sourcesContent":["module.exports = {\r\n  eventos: [\r\n    {\r\n      id: 0,\r\n      driver:\r\n        \"Para el 2030 los ovnis vendran a la tierra y la emoción por descubrir vida en otros planetas será tan grande que todos querran viajar al espacio.\",\r\n    },\r\n    {\r\n      id: 1,\r\n      driver:\r\n        \"En el 2030 escasearan los recursos, no habrá barrio ni ciudad ni pueblo que no sea saqueada y robada por la falta de recursos.\",\r\n    },\r\n    {\r\n      id: 2,\r\n      driver:\r\n        \"Para el 2030 el viaje en naves espaciales será tan común como el viaje en autobus, taxi o bicicleta.\",\r\n    },\r\n    {\r\n      id: 3,\r\n      driver:\r\n        \"Para el 2030 todas las fuentes de energía fosil se habrán agotado, haciendo que la economía caiga considerablemente y dejemos de ser dependientes del petroleo.\",\r\n    },\r\n    {\r\n      id: 4,\r\n      driver:\r\n        \"Para el 2030 las palomas de las ciudades y pueblos se habrán extinguido al ser catalogadas como plaga.\",\r\n    },\r\n    {\r\n      id: 5,\r\n      driver:\r\n        \"Para el 2030 las personas comenzaran a contemplar las predicciones de profetas que se encuentren en las redes sociales.\",\r\n    },\r\n    {\r\n      id: 6,\r\n      driver:\r\n        \"Para el 2030 los videojuegos pasaran a ser una modalidad interaccion social mediante la virtualidad, la manera en la que nos comunicamos por internet pasara a ser mediante realidad virtual.\",\r\n    },\r\n    {\r\n      id: 7,      \r\n      driver: \"Para el 2030 se podrá aprobar el aborto por telemedicina.\",\r\n    },\r\n    {\r\n      id: 8,\r\n      driver:\r\n        \"Para el 2030 con el aumento de las enfermedades las personas comenzaran a contemplar la probabilidad de irse a vivir al campo.\",\r\n    },\r\n    {\r\n      id: 9,\r\n      driver:\r\n        \"Para el 2030 el aumento de personas en cuarentena hará que la compra de pantalones disminuya considerablemente.\",\r\n    },\r\n    {\r\n      id: 10,\r\n      driver:\r\n        \"Para el 2030 la inteligencia artificial reemplazará a los artistas, de esta manera las canciones serán creadas a partir del promedio de gusto de las personas.\",\r\n    },\r\n    {\r\n      id: 11,\r\n      driver:\r\n        \"Para el 2030 la modalidad de teletrabajo será más común, las personas optaran por trabajar desde la comodidad de sus hogares.\",\r\n    },\r\n    {\r\n      id: 12,\r\n      driver:\r\n        \"Para el 2030 la inteligencia artificial hará parte de sistemas de seguridad sanitaria en los trabajos con el proposito de preveer contagios de enfermedades.\",\r\n    },\r\n    {\r\n      id: 13,\r\n      driver:\r\n        \"Para el 2030 los empleadores implementaran sistemas de ayuda para empleados, haciendo que las compañias se vean forzadas a considerar el bienestar de sus empleados de una manera más holistica.\",\r\n    },\r\n    {\r\n      id: 14,\r\n      driver:\r\n        \"Para el 2030 la aptitud de liderazgo habrá mejorado, los lideres ahora son cada vez mas calmados y fuertes, demostrando empatía y pensamiento a largo tiempo y tomando decisiones apropiadas para afrontar una acción.\",\r\n    },\r\n    {\r\n      id: 15,\r\n      driver:\r\n        \"Para el 2030 las relaciones con los compañeros de trabajo van a mejorar.\",\r\n    },\r\n    {\r\n      id: 16,\r\n      driver:\r\n        \"Para el 2030 el apoyo a la salud mental será acogido, se buscará combatir la depresion, ansiedad y otros problemas de salud mental.\",\r\n    },\r\n    {\r\n      id: 17,\r\n      driver:\r\n        \"Para el 2030 las personas se van a sentir más comodos con la tecnología\",\r\n    },\r\n    {\r\n      id: 18,\r\n      driver:\r\n        \"Para el 2030 la industria de la impresión 3D tomará aun más protagonismo en la industria de la salud, permitiendo imprimir herramientas para ayudar a las personas con mayor facilidad.\",\r\n    },\r\n    {\r\n      id: 19,\r\n      driver:\r\n        \"Para el 2030 la inteligencia artificial será participe en la deteccion de personas enfermas para prevenir proximas pandemias.\",\r\n    },\r\n  ],\r\n};\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = ({eventTitle, eventDesc}) => {\r\n  return (\r\n    <div className=\"o-card\">    \r\n      <div className=\"o-titleCard\"><h1>Evento</h1></div>\r\n      <div className=\"o-descCard\">{eventDesc}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./Behavior.css\";\r\nconst icons = {\r\n  \"LOS SEGUIDORES SON FIELES AL DIOS(FUTURO BUENO)\": \"https://JhosuaP97.github.io/qqsud/img/crecimiento.svg\",\r\n  \"LOS SEGUIDORES DEJAN DE CREER(FUTURO MALO)\": \"https://JhosuaP97.github.io/qqsud/img/colapso.svg\",\r\n  \"LOS SEGUIDORES NECESITAN RECUPERAR LA FE\": \"https://JhosuaP97.github.io/qqsud/img/transformacion.svg\",\r\n  \"LOS SEGUIDORES NECESITAN SER DISCIPLINADOS\":\"https://JhosuaP97.github.io/qqsud/img/adaptacion.svg\"\r\n};\r\n\r\nconst getIcon = (stateIcon) => {\r\n  const iconSelected = icons[stateIcon] ? icons[stateIcon] : \"\";\r\n  return iconSelected;\r\n};\r\n\r\nconst Behavior = ({behaTitle, stateIcon}) => {\r\n  return (\r\n    <div className=\"o-behave\">\r\n      <div className=\"o-behaveimg\">\r\n        <h3>Comportamiento:</h3>\r\n        <h3>{behaTitle}</h3>\r\n        <img src={getIcon(stateIcon)} alt={getIcon(stateIcon)} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Behavior;\r\n","import React, {Component} from \"react\";\r\n\r\nclass Timer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      minutes: 5,\r\n      seconds: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.myInterval = setInterval(() => {\r\n      const {seconds, minutes} = this.state;\r\n      const {start} = this.props;\r\n      this.setState({\r\n        start: false,\r\n      });\r\n\r\n      if (!start) {\r\n        console.log(\"No he iniciado, presiona en el botón para empezar\");\r\n      } \r\n      else if (minutes === 0 && seconds === 0) {\r\n        this.setState({\r\n          restart: !this.props.restart ? this.handleReset() : null,\r\n        });\r\n      } else {\r\n        if (seconds > 0) {\r\n          this.setState(({seconds}) => ({\r\n            seconds: seconds - 1,\r\n          }));\r\n        }\r\n\r\n        if (seconds === 0) {\r\n          if (minutes === 0) {\r\n            clearInterval(this.myInterval);\r\n          } else {\r\n            this.setState(({minutes}) => ({\r\n              minutes: minutes - 1,\r\n              seconds: 59,\r\n            }));\r\n          }\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  handleReset() {\r\n    this.setState({\r\n      minutes: 5,\r\n      seconds: 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {minutes, seconds} = this.state;\r\n    return (\r\n      <div className=\"o-timer\">\r\n        {minutes === 0 && seconds === 0 ? (\r\n          <div>\r\n            <h2>¡Tiempo!</h2>\r\n          </div>\r\n        ) : (\r\n          <h4>\r\n            Tiempo restante: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\r\n          </h4>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React, {Component} from \"react\";\nimport \"./App.css\";\nimport Card from \"./Components/Card/Card\";\nimport Behavior from \"./Components/Behavior/Behavior\";\nimport Timer from \"./Components/Timer/Timer\";\nimport {eventos} from \"./data\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      random: \"\",\n      random2: \"\",\n      eventos: eventos,\n      comportamientos: [\n        \"LOS SEGUIDORES SON FIELES AL DIOS(FUTURO BUENO)\",\n        \"LOS SEGUIDORES DEJAN DE CREER(FUTURO MALO)\",\n        \"LOS SEGUIDORES NECESITAN RECUPERAR LA FE\",\n        \"LOS SEGUIDORES NECESITAN SER DISCIPLINADOS\",\n      ],\n      comp: \"\",\n      start: false,\n      play: false,\n      hide: false,\n      restart:false\n    };\n  }\n\n  handleEvent(eventos) {\n    let evento = Object.values(\n      eventos[Math.floor(Math.random() * eventos.length)]\n    );\n    return evento;\n  }\n\n  handelRandom() {\n    let {eventos, comportamientos} = this.state;\n    let randCol = this.handleEvent(eventos);\n    let randCol2 = this.handleEvent(eventos);\n    let randComp =\n      comportamientos[Math.floor(Math.random() * comportamientos.length)];\n\n    while (randCol[0] === randCol2[0]) {\n      randCol2 = this.handleEvent(eventos);\n    }\n\n    this.setState({\n      random: randCol,\n      random2: randCol2,\n      comp: randComp,\n      start: true,\n      play: true,\n      hide: !this.state.hide,\n      restart:!this.state.restart\n    });\n  }\n\n  render() {\n    const {random, random2, comp, start, play,restart} = this.state;\n    return (\n      <div className=\"o-container\">\n        <h1>¿Quién quiere ser un Dios?</h1>\n        <Timer start={start} restart={restart}/>\n        {!play ? (\n          <h1 className=\"o-play\">¿Te atreves a jugar?</h1>\n        ) : (\n          <div>\n            <Behavior stateIcon={comp} behaTitle={comp} />\n            <div className=\"o-cards\">\n              <Card eventDesc={random[1]} />\n              <Card eventDesc={random2[1]} />\n            </div>\n          </div>\n        )}\n        <button onClick={() => this.handelRandom()}>¡Jugar!</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}